replicaCount: 1

# TODO: fix dupe ports
specs:
  server:
    repository: bmon-odds/server
    name: bmon-odds-server
    pullPolicy: IfNotPresent
    tag: latest
    podLabels:
      pod: server
    containerPort: 8080
    service:
      type: ClusterIP
      selectorLabels: 
        pod: server
    livenessProbe:
      initialDelaySeconds: 30
      httpGet:
        path: /api/sports
        port: 8080
    readinessProbe:
      initialDelaySeconds: 20
      httpGet:
        path: /api/sports
        port: 8080
    volumes: []
    volumeMounts: []
  gen:
    repository: bmon-odds/gen
    name: bmon-odds-gen
    pullPolicy: IfNotPresent
    tag: latest
    podLabels: 
      pod: gen
    containerPort: 8081
    service:
      type: ClusterIP
      selectorLabels: 
        pod: gen
    livenessProbe:
      initialDelaySeconds: 5
      httpGet:
        path: /gen/api/health
        port: 8081
    readinessProbe:
      initialDelaySeconds: 5
      httpGet:
        path: /gen/api/health
        port: 8081
    volumes: []
    volumeMounts: []
  frontend:
    repository: bmon-odds/frontend
    name: bmon-odds-frontend
    pullPolicy: IfNotPresent
    tag: latest
    podLabels: 
      pod: frontend
    containerPort: 3000
    service:
      type: ClusterIP
      selectorLabels: 
        pod: frontend
    livenessProbe:
      initialDelaySeconds: 5
      httpGet:
        path: /index.html
        port: 3000
    readinessProbe:
      initialDelaySeconds: 5
      httpGet:
        path: /index.html
        port: 3000
    volumes: []
    volumeMounts: []

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# TODO: resolve duplicate nginx instances
# TODO: rewrite the ingress.yaml
ingress:
  enabled: true
  className: nginx
  annotations: 
    #nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    #nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    #nginx.ingress.kubernetes.io/hsts: 'true'
    #nginx.ingress.kubernetes.io/hsts-include-subdomains: 'true'
    #nginx.ingress.kubernetes.io/hsts-max-age: '31536000'

  service:
    name: ingress-service
    type: ClusterIP
    port: 443

  hosts:
    - host: bmon-odds.local
      paths:
        # TODO: remove genapi from ingress when everything is set up
        # TODO: add a suffix -service to all service names
        - path: "/gen/api"
          pathType: "Prefix"
          backend:
            service: "bmon-odds-gen"
            port: 8081
        - path: "/api"
          pathType: "Prefix"
          backend:
            service: "bmon-odds-server"
            port: 8080
        - path: "/"
          pathType: "Prefix"
          backend:
            service: "bmon-odds-frontend"
            port: 3000
  tls:
    - hosts:
      - bmon-odds.local
      secretName: ingress-tls-certs

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80

#env
postgresql:
  enabled: true
  primary:
    name: NAME_CHANGETHIS
    initdb:
      scriptsConfigMap: "configmap-postgresql-init"

# TODO: figure out how to split the postgressql-secret into 2, one for global without the su password and one internally with.
global:
  postgresql:
    auth:
      username: USERNAME_CHANGETHIS
      database: DATABASE_CHANGETHIS
      existingSecret: postgresql-secrets
      url: URL_CHANGETHIS
    service:
      ports:
        postgresql: 5432

# TODO: do some proper port referencing
bmonodds:
  server:
    spring:
      profilesActive: PROFILES_ACTIVE_CHANGETHIS
      debug: DEBUG_CHANGETHIS
    schema:
      app: APP_SCHEMA_CHANGETHIS
      flyway: FLYWAY_SCHEMA_CHANGETHIS
  gen:
    apiPrefix: API_PREFIX_CHANGETHIS
    serverBackendUrl: http://bmon-odds-server:8080/api
    maxLiveGames: MAX_LIVE_GAMES_CHANGETHIS
    dotnet:
      enviroment: ENVIROMENT_CHANGETHIS
      httpPorts: 8081
  frontend:
    vite:
      serverBackendUrl: http://bmon-odds-server:8080/api
